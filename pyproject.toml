[project]
name = "BuildingThermalPanorama"
version = "0.1.0"
description = "Building Thermal Panorama"
authors = [{ name = "beskep", email = "beskep@naver.com" }]
dependencies = [
    "matplotlib<3.8",
    "seaborn>=0.13.2",
    "pandas>=2.2.2",
    "openpyxl>=3.1.5",
    "scikit-learn>=1.5.1",
    "scikit-image>=0.24.0",
    "onnxruntime>=1.18.1",
    "simpleitk>=2.3.1",
    "pyqt5>=5.15",
    "opencv-python>=4.10.0.84",
    "loguru>=0.7.2",
    "rich>=13.7.1",
    "click>=8.1.7",
    "cx-freeze>=7.2.0",
    "pywin32>=306",
    "more-itertools>=10.4.0",
    "msgspec>=0.18.6",
    "antlr4-python3-runtime>=4.13",
    "omegaconf",
    "webp>=0.4.0",
]
readme = "README.md"
requires-python = ">= 3.11"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "ruff>=0.5.7",
    "pytest>=8.3.2",
    "pylint>=3.2.6",
    "mypy>=1.11.1",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["pano"]

[tool.ruff]
preview = true
output-format = "concise"
indent-width = 2
exclude = ["pano/registration/evaluation/_*", "script/*"]

[tool.ruff.format]
preview = true
quote-style = "single"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN",    # flake8-annotations
    "COM",    # flake8-commas
    "CPY",    # flake8-copyright
    "D1",     # pydocstyle: D1*
    "D400",   # pydocstyle: ends-in-period
    "E1",     # pycodestyle: E1*
    "E2",     # pycodestyle: E2*
    "FIX",    # flake8-fixme
    "INP",    # flake8-no-pep420
    "ISC001", # flake8-implicit-str-concat: single-line-implicit-string-concatenation
    "PTH123", # flake8-use-pathlib: builtin-open
    "Q",      # flake8-quotes
    "S",      # flake8-bandit
    "T20",    # flake8-print
    "TD",     # flake8-todos
]
extend-safe-fixes = [
    "EM",  # flake8-errmsg
    "TCH", # flake8-type-checking
    "TRY", # tryceratops
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
max-args = 7

[tool.pylint.messages_control]
confidence = ["HIGH", "INFERENCE", "INFERENCE_FAILURE"]
disable = ["C", "R", "I", "no-member", "fixme"]

[tool.mypy]
disable_error_code = [
    'attr-defined',
    'import-untyped',
    'import',
    'var-annotated',
]
check_untyped_defs = true
warn_unused_ignores = true
warn_unused_configs = true

[tool.pytest.ini_options]
addopts = "-v"

[tool.typos.default.extend-words]
ANLY = "ANLY"
